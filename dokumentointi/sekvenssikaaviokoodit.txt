Title player jumps + 1 frame
player -> Game: *presses the spacebar*
Game -> Logic:update()
Logic -> Logic: checkInput()
Logic -> Player: jump()
Logic -> Logic: applygravity(delta)
Logic -> Player: move(delta)
Logic -> Logic: updateFirespinners(delta)
Logic -> Logic: updatePatrollingEnemies(delta)
Logic -> Logic: checkForCollisions(damagingCollidables)
Logic -> Logic: checkForCollisions(platforms);
Logic -> Logic: checkFirespinners();

--------------------------------------------------------------

title Spritehandler
Participant Game
Participant Logic

Game -> SpriteHandler: New SpriteHandler()
SpriteHandler -> SpriteHandler: readMaps()

Game -> Logic:addPatrollingEnemiesArrayList
SpriteHandler --> Logic: getPatrollingEnemies(mapID)

Game -> Logic:addFirespinnerArrayList
SpriteHandler --> Logic: getFirespinners(mapID)

Game -> Logic:addDamagingCollidablesArrayList
SpriteHandler --> Logic: getSpikes(mapID)
Game -> Logic:addPlatformArrayList
SpriteHandler --> Logic: getMapPlatforms(mapID)
--------------------------------------------------------------
Title player triggers boss and on the next frame gets hit
player -> Game: *descends the player entity to boss room height*
Game -> Logic:update()
Logic -> Logic: checkInput()
Logic -> Logic: applygravity(delta)
Logic -> Player: move(delta)
Logic -> Logic: updateFirespinners(delta)
Logic -> Logic: updatePatrollingEnemies(delta)
Logic -> Logic: checkForCollisions(damagingCollidables)
Logic -> Logic: checkForCollisions(platforms)
Logic -> Logic: checkFirespinners()
Logic -> Logic: checkForBossFight()
Logic -> Boss: start()
Logic -> Boss: update(delta)

Game -> Logic:update()
Logic -> Logic: checkInput()
Logic -> Logic: applygravity(delta)
Logic -> Player: move(delta)
Logic -> Logic: updateFirespinners(delta)
Logic -> Logic: updatePatrollingEnemies(delta)
Logic -> Logic: checkForCollisions(damagingCollidables)
Logic -> Player: takeDamage(collidable.getCollisionDamage())
Logic -> Boss: reset()





